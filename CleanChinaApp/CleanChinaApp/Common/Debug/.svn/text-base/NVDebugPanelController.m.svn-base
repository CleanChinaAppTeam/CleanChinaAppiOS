//
//  NVDebugPanelController.m
//  Aroundme
//
//  Created by W Sheely on 13-1-5.
//  Copyright (c) 2013年 dianping.com. All rights reserved.
//

#import "NVDebugPanelController.h"
#import "Command.h"
#import "CommandFactory.h"

@implementation NVDebugPanelController

@synthesize  isShow = mShow;
@synthesize  isPerspective = _isPerspective;
NVDebugPanelController * mDebugPanel;

+(NVDebugPanelController*) instance{
    if(mDebugPanel == nil){
        mDebugPanel = [[NVDebugPanelController alloc]init];
    }
    return mDebugPanel;
}
- (void)setIsPerspective:(BOOL)isPerspective{
    _isPerspective = isPerspective;
    
    if(_isPerspective){
        [self registerForKeyboardNotifications];
        mShow = YES;
        self.view.alpha = 0;
        self.view.frame = [UIScreen mainScreen].applicationFrame;
        [[NVApplication sharedApplication ].keyWindow addSubview:self.view];
        [UIView beginAnimations:nil context:nil];
        [UIView setAnimationDuration:0.2];
        [UIView setAnimationCurve:UIViewAnimationCurveEaseInOut];
        self.view.alpha = 1;
        [UIView commitAnimations];
    }else{
       
        self.view.alpha = 1;
        self.view.frame = [UIScreen mainScreen].applicationFrame;
        [[NVApplication sharedApplication ].keyWindow insertSubview:self.view atIndex:0];
        [UIView beginAnimations:nil context:nil];
        for (UIView* view in [NVApplication sharedApplication ].keyWindow.subviews) {
            if(view != self.view){
                view.alpha = 1;
            }
        }
        [UIView setAnimationDuration:0.2];
        [UIView setAnimationCurve:UIViewAnimationCurveEaseInOut];
        self.view.alpha = 0;
        [mTextField resignFirstResponder];
        [UIView commitAnimations];
 [self unregisterForKeyboardNotifications];
    }
}
- (void)show
{
    if(mShow){
        return;
    }
    mShow = YES;
    self.isPerspective = YES;
   }
- (void)animationDidEnd{
    [self.view removeFromSuperview];
}

- (void)dismiss
{
    mShow = NO;
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:0.5];
    [UIView setAnimationCurve:UIViewAnimationCurveEaseInOut];
    [UIView setAnimationDelegate:self];
    self.view.alpha = 0;
//    for (UIView* view in [NVApplication sharedApplication ].keyWindow.subviews) {
//        if(view != self.view){
//            view.alpha = 1;
//        }
//    }
    [UIView setAnimationDidStopSelector:@selector(animationDidEnd)];
    [UIView commitAnimations];
    [self unregisterForKeyboardNotifications];
}
- (void)keyboardWillShow:(NSNotification *)noti
{
    //键盘输入的界面调整
    //键盘的高度
    CGRect kbBounds;
    [[[noti userInfo] objectForKey:UIKeyboardFrameEndUserInfoKey] getValue:&kbBounds];
    int keyboardHeight = kbBounds.size.height;
    CGRect frame = mTextField.frame;
    frame  = CGRectMake(0, self.view.frame.size.height - keyboardHeight - mTextField.frame.size.height, frame.size.width, frame.size.height);
    [UIView beginAnimations:@"Curl"context:nil];//动画开始
    [UIView setAnimationDuration:0.30];
    [UIView setAnimationDelegate:self];
    [mTextField setFrame:frame];
    frame = CGRectMake(mTextConsole.frame.origin.x, mTextConsole.frame.origin.y, mTextConsole.frame.size.width,   mTextField.frame.origin.y);
    mTextConsole.frame = frame;
    CGPoint point = CGPointMake(0, mTextConsole.contentSize.height - mTextConsole.frame.size.height);
    if(point.y > 0 ){
        mTextConsole.contentOffset = point;
    }
    [UIView commitAnimations];
}


- (void)keyboardWillHidden:(NSNotification*)aNotification
{
	//self.tableView.frame=CGRectMake(self.tableView.frame.origin.x, self.tableView.frame.origin.y, self.tableView.frame.size.width, self.view.frame.size.height);
    CGRect frame = mTextField.frame;
    frame  = CGRectMake(0, self.view.frame.size.height  - mTextField.frame.size.height, frame.size.width, frame.size.height);
    [UIView beginAnimations:@"Curl"context:nil];//动画开始
    [UIView setAnimationDuration:0.30];
    [UIView setAnimationDelegate:self];
    [mTextField setFrame:frame];
    frame = CGRectMake(mTextConsole.frame.origin.x, mTextConsole.frame.origin.y, mTextConsole.frame.size.width,   mTextField.frame.origin.y);
    mTextConsole.frame = frame;
    [UIView commitAnimations];

}


- (void)registerForKeyboardNotifications
{
	[[NSNotificationCenter defaultCenter] addObserver:self
											 selector:@selector(keyboardWillShow:)
												 name:UIKeyboardWillShowNotification object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self
											 selector:@selector(keyboardWillHidden:)
												 name:UIKeyboardWillHideNotification object:nil];
}

- (void)unregisterForKeyboardNotifications
{
	[[NSNotificationCenter defaultCenter] removeObserver:self
													name:UIKeyboardWillShowNotification
												  object:nil];
	[[NSNotificationCenter defaultCenter] removeObserver:self
													name:UIKeyboardWillHideNotification
												  object:nil];
}

- (void)addLog:(NSString *)logStr
{
    BOOL isScroll =  mTextConsole.contentOffset.y + mTextConsole.frame.size.height == mTextConsole.contentSize.height ? YES:NO;
    mTextConsole.text = [mTextConsole.text stringByAppendingString: [NSString stringWithFormat:@">%@\n",logStr]];
    CGPoint point = CGPointMake(mTextConsole.contentOffset.x, mTextConsole.contentSize.height - mTextConsole.frame.size.height) ;
    if(point.y > 0 && isScroll){
        mTextConsole.contentOffset = point;
    }
}
- (void)viewDidLoad{
    [super viewDidLoad];
    mTextField.returnKeyType = UIReturnKeyDone;
    
    NSString *str = @"   **********************************************************\n                     Sheely -- demo v1.0\n          help to list all commands & description \n             2013 sheely copyright & good luck \n   **********************************************************\n";
    mTextConsole.text = str;
    mTextConsole.editable = NO;
    mTextConsole.delegate = self;
}
- (void)viewDidUnload {
    mTextField = nil;
    mTextConsole = nil;
    [super viewDidUnload];
}
#pragma -mark delegate
- (BOOL)textFieldShouldReturn:(UITextField *)textField
{
    // When the user presses return, take focus away from the text field so that the keyboard is dismissed.
    
    NSString* str = textField.text;
    [self addLog:str];
    NSArray* array = [str componentsSeparatedByString :@" "];
    Command* cmd;
    if([array count]>0){
        NSString* command = [array objectAtIndex:0];
        if([command caseInsensitiveCompare:@"cls"]==NSOrderedSame){
            mTextConsole.text = @"";
            mTextField.text = @"";
        }else{
            cmd = [CommandFactory factoryByName:command];
            if(cmd){
                if(array.count > 1){
                    NSMutableArray * args = [NSMutableArray arrayWithArray:array];
                    [args removeObjectAtIndex:0];//首部去掉
                    cmd.args = args;
                }
                [cmd execute];
                [self addLog:@"OK, command completion\n"];
                textField.text = @"";
            }else{
                [self addLog:@"Sorry, can't find the command\n"];
            }
        }
    }
    //    [textField resignFirstResponder];
    return NO;
}
#pragma UITextView delegate
- (BOOL)textViewShouldBeginEditing:(UITextView *)textView
{
    return NO;
}
- (void)textViewDidChange:(UITextView *)textView
{
    
}

@end
